const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder, MessageFlags } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('roles')
        .setDescription('Muestra la lista de roles m√©dicos del hospital.')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

    async execute(interaction) {
        const rolesTexto = `
üë®‚Äç‚öñÔ∏è **1. Director**
* M√°xima autoridad del hospital.
* Define protocolos generales, aprueba contrataciones y gestiona pagos del personal.
* Representa al hospital ante el gobierno, organizaciones y otras facciones.
* Supervisa a todo el staff de forma indirecta.

üë©‚Äç‚öñÔ∏è **2. Subdirector**
* Sustituye al Director en su ausencia.
* Supervisa la operatividad interna del hospital.
* Resuelve conflictos internos o toma decisiones si hay situaciones cr√≠ticas.
* Autoriza permisos especiales (traslados, investigaciones, etc).
* Realiza pruebas de ascenso y entrevistas de ingreso.

üß† **3. Encargado de Departamento (Neuro, Cardio, Psico, etc)**
* Lidera un √°rea m√©dica especializada.
* Crea protocolos y dirige el enfoque cl√≠nico de su especialidad.
* Supervisa a m√©dicos especialistas y generales que trabajan en su √°rea.
* Es responsable de diagn√≥sticos complejos y decisiones de tratamiento.

üî™ **4. M√©dico Cirujano**
* Realiza procedimientos quir√∫rgicos especializados (cardiocirug√≠a, neurocirug√≠a, etc).
* Debe realizar informe de cirug√≠as y reportarlas al Encargado de Departamento.
* Puede apoyar en urgencias graves.
* Tiene peso cl√≠nico alto, pero se limita a casos quir√∫rgicos.

ü©ª **5. M√©dico Especialista**
* Tiene una especializaci√≥n (cardiolog√≠a, neurolog√≠a, traumatolog√≠a, etc).
* Recibe derivaciones de m√©dicos generales.
* Atiende consultas de su √°rea de especialidad.
* Debe realizar informe de atenciones y cirug√≠as, y reportarlas a su Encargado.
* Entrena a m√©dicos generales interesados en especializarse.

ü©∫ **6. M√©dico General**
* Atiende consultas generales y cuadros cl√≠nicos complejos.
* Puede hacer cirug√≠as generales o asistir en cirug√≠as de mayor complejidad.
* Debe realizar informes de atenciones y cirug√≠as.
* Deriva a especialistas cuando el caso lo amerita.
* Puede supervisar a residentes, internos, enfermeros y param√©dicos.

üßë‚Äçüéì **7. M√©dico Residente**
* Atiende consultas generales, diagn√≥stico y tratamiento de enfermedades comunes.
* Es m√©dico graduado.
* Puede realizar cirug√≠as generales bajo supervisi√≥n.
* Debe realizar informes de atenciones y cirug√≠as.
* Participa en guardias y entrena a param√©dicos o enfermeros.

üë®‚Äç‚öïÔ∏è **8. Interno**
* Se encarga de pacientes internados, post-operatorios y ex√°menes de laboratorio.
* Es estudiante en √∫ltimo a√±o de medicina.
* Ideal para fichaje, evoluci√≥n de pacientes y apoyo en sala.
* No realiza diagn√≥sticos.

üöë **9. Param√©dico**
* Responde a emergencias fuera del hospital (nuevos ingresos deben ir acompa√±ados).
* Realiza estabilizaci√≥n, RCP, traslado y primeros auxilios.
* Puede acompa√±ar a personal m√©dico para aprender en terreno.
* Al llegar al hospital, hace el traspaso al personal m√©dico.
* No realiza diagn√≥sticos.`;


        try {
            const embed = new EmbedBuilder()
                .setColor('Blue')
                .setTitle('üìã RANGOS M√âDICOS DEL HOSPITAL   ')
                .setDescription(rolesTexto)
                .setFooter({ text: 'San Andreas Medical Service | Distrito X' })
                .setTimestamp();

            await interaction.channel.send({ embeds: [embed] });

            await interaction.reply({ 
                content: '‚úÖ Lista de roles enviada correctamente.', 
                flags: MessageFlags.Ephemeral 
            });

            const logChannel = await interaction.guild.channels.fetch('1402480570604453930').catch(() => null);
            if (logChannel) {
                const logEmbed = new EmbedBuilder()
                    .setColor('Green')
                    .setTitle('üìú Roles m√©dicos enviados')
                    .addFields(
                        { name: 'Canal', value: `<#${interaction.channel.id}>`, inline: true },
                        { name: 'Usuario', value: `<@${interaction.user.id}>`, inline: true }
                    )
                    .setTimestamp();

                await logChannel.send({ embeds: [logEmbed] });
            }

        } catch (error) {
            console.error(error);

            if (!interaction.replied) {
                await interaction.reply({ 
                    content: '‚ùå Hubo un error al enviar la lista de roles.', 
                    flags: MessageFlags.Ephemeral 
                });
            }
        }
    }
};
